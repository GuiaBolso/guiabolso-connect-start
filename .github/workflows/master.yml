name: On master & Publish

on:
  push:
    paths: 'libs/**'
    branches: [master, next]

jobs:
  dependencies:
    name: Cache dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        id: npm-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |-
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Npm Install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

  publish:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Publish
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - run: git fetch --no-tags --prune --depth=5 origin master

      - name: Setup Node.js with Npm Package Registry
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Restore cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |-
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run builders Affected. Run many?
        run: npm run production

        # run: npm run affected:build -- --base=origin/master~1 --prod --with-deps
      - name: Run Semantic Release
        run: npm run semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
